#details
  %h3 A 'Cablegate' Smart Mirror
  %p<
    Wikileaks was taken down by in a blatant attack on free speech. This got me thinking about how one would design a simple web system that people could easily download a copy of for themselves and run it and it would announce itself to the other mirrors as they emerged.  This sort of thing is generically useful, but the wikileaks attacks gave the idea more impetus.
  %h3 What is this.
  %p<
    Cablegate is a simple Sinatra web application that mirrors an archive of the original
    %a{:href=>'http://wikileaks.ch/cablegate.html'}cablegate
    files in its public directory and which can easily be deployed to a Ruby aware cloud computing stack such as
    %a{:href=>'http://www.heroku.com'} Heroku.
  %p<
    View the static 
    %a{ :href => '/index.html'}local mirror of the Cablegate archives
#mirrors
  - if @mirrors.empty?
    %p{:class => 'error'} There are NO mirrors loaded.
  - else
    %h2 Known Smart Mirrors.
    %table
      %tr<
        %th> URI
        %th> Build
      - for m in @mirrors do
        %tr
          %td<
            %a{:href => m.uri} #{m.uri}
          %td> #{m.build_number}
